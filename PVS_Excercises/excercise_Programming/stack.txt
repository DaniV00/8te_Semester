public interface Stack<T>{

public void push(T element);

public T pop();

}

public class LockedStack<T> implements Stack<T>{
Stack <T> stack = new Stack<T>();
boolean isLocked = false;

public LockedStack (Stack <T> stack){
this.stack = stack;
}

public void lock(){
this.locked = true;
}

public void open(){
this.locked = false;
}

@Override
public void push(T element){

if(locked == true){
throw new StackLockedException
}
else {
stack.push(element);
}
}

@Override
public T pop(){
if(locked == true){
throw new StackLockedException
}
else{
return stack.pop();
}

}

}